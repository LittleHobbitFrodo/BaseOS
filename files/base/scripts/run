#!/bin/bash

black() { echo -e "\033[0;30m$1\033[0m"; }
red() { echo -e "\033[0;31m$1\033[0m"; }
green() { echo -e "\033[0;32m$1\033[0m"; }
yellow() { echo -e "\033[1;33m$1\033[0m"; }
blue() { echo -e "\033[0;34m$1\033[0m"; }
magenta() { echo -e "\033[0;35m$1\033[0m"; }
cyan() { echo -e "\033[0;36m$1\033[0m"; }
white() { echo -e "\033[0m$1\033[0m"; }

error() { echo "$(red ERROR): $1"; }
warning() { echo "$(yellow WARNING): $1"; }
note() { echo "$(magenta NOTE): $1"; }

function arch_config() {
    echo "$CONFIG_PATH/util-$i.conf"
}


CONFIG_PATH=$PWD/config
KERNEL_CONFIG=$CONFIG_PATH/kernel.conf
OS_CONFIG=$CONFIG_PATH/os.conf
UTIL_CONFIG=$CONFIG_PATH/util.conf
SCRIPTS=$PWD/files/base/scripts

debug=false
system=""

source $UTIL_CONFIG



if [ "$#" != 0 ]; then
    for arg in "$@"; do
        i="$(echo $arg | tr '[:upper:]' '[:lower:]')"
        case $i in
            debug)
                debug=true
            ;;
            x86_64)
                system="$system x86_64"
            ;;
            arm64)
                system="$system aarch64"
            ;;
        esac
    done
fi

if [ -e "$CONFIG_PATH/qemu-parameters.conf" ]; then

    if [ -n "$system" ]; then
        arch="$system"
    fi
    IFS=" "
    for i in $arch; do

        iso="$PWD/files/$iso_name-$i.iso"

        if [ ! -e "$iso" ]; then
            error "iso $iso_name-$i.iso does not exist"
            continue
        fi
        
        current_arch="$i"
        source "$(arch_config $i)"
        source "$CONFIG_PATH/qemu-parameters.conf"

        $emulator $qemu_parameters

    done

else
    error "Qemu parameters are missing"
    note "please create the $(green "$CONFIG_PATH/qemu-parameters.conf") file"
    exit 1
fi

